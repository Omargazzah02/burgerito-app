import { getToken } from "next-auth/jwt";
import { NextResponse } from "next/server";

export async function middleware(req) {
  const token = await getToken({ req, secret: process.env.NEXTAUTH_SECRET });
  const { pathname } = req.nextUrl;

  // ðŸ”¹ Si l'utilisateur est connectÃ© et essaie d'accÃ©der Ã  /login ou /register â†’ redirection vers /
  if (token && ["/login", "/register"].includes(pathname)) {
    return NextResponse.redirect(new URL("/", req.url));
  }

  // ðŸ”¹ Si l'utilisateur n'est pas connectÃ© et essaie d'accÃ©der Ã  /me ou /cart â†’ redirection vers /login
  if (!token && ["/me", "/cart"].includes(pathname)) {
    return NextResponse.redirect(new URL("/login", req.url));
  }

  // ðŸ”¹ Tout le reste â†’ laisser passer
  return NextResponse.next();
}

// On exclut les routes internes Ã  NextAuth et les fichiers statiques
export const config = {
  matcher: [
    "/((?!_next/static|_next/image|favicon.ico|api/auth/).*)",
  ],
};
